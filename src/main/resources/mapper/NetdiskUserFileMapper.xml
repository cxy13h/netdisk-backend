<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.netdisk.dao.NetdiskUserFileMapper">

    <select id="getDirectoryTree" resultType="com.example.netdisk.dto.DirectoryTreeNode">
        WITH RECURSIVE directory_tree AS (
            -- 初始查询：获取指定目录本身
            SELECT
                d.directory_id AS id,
                d.parent_directory_id,
                'directory' AS type,
                d.directory_name AS name
            FROM netdisk_directory d
            WHERE d.user_id = #{userId} AND d.directory_id = #{parentDirectoryId}
            UNION ALL
            -- 递归查询：获取指定目录的直接子目录及其子目录
            SELECT
                d.directory_id AS id,
                d.parent_directory_id,
                'directory' AS type,
                d.directory_name AS name
            FROM netdisk_directory d
                     INNER JOIN directory_tree dt ON d.parent_directory_id = dt.id
        )
        SELECT * FROM directory_tree
        UNION ALL
-- 查询所有子目录下的文件
        SELECT
            uf.user_file_id AS id,
            uf.directory_id AS parent_directory_id,
            'file' AS type,
            uf.user_filename AS name
        FROM netdisk_user_file uf
        WHERE uf.user_id = #{userId} AND uf.directory_id IN (
            SELECT id FROM directory_tree
        );
    </select>


</mapper>
